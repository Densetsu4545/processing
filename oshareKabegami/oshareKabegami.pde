void setup() {
  size(360, 640);// �����͌Œ�
  colorMode( RGB );
  background(#e0b1c5);
  drawMyWallPaper();// ����̊֐�
  saveFrame("myWallPaper_20XX531XYZ.png");
}

void drawMyWallPaper() {
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(186.31137, 408.20264, 5.846521, 5.846521,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(163.39763, 379.10919, 44.45, 75.67083);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(177.36967, 370.4975, 43.656254, 83.34375);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(165.127, 426.21637, 37.36856, 27.764728,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(154.52831, 415.80942, 5.846521, 5.846521,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(162.84082, 431.04614, 37.36856, 21.486716);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(162.79523, 432.46823, 37.36856, 21.486716,1.3585317,2.8656535,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(131.51942, 398.26428, 23.894282, 24.529424);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(126.19238, 393.01151, 11.5648412, 11.5648412);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(125.72935, 390.89484, 7.317267, 7.317267);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(136.95372, 407.04962, 26.14324, 24.397132);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(147.46863, 404.18787, 26.14324, 24.397132);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(167.27646, 408.69, 26.14324, 24.397132);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(197.4487, 379.39243, 5.846521, 5.846521,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(197.5444, 376.22372, 5.846521, 5.846521,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(193.0213, 397.63229, 5.846521, 5.846521,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(194.28195, 394.2128, 5.846521, 5.846521,3.9252555,8.6340996,OPEN);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(150.54791, 439.85715, 2.8764882, 2.8764882);
  fill(#ffffff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(154.20782, 432.54898, 20.205576, 20.205576,1.9750659,4.0710832,OPEN);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(177.86546, 436.66005, 183.01652, 430.49977);
  fill(#b5b3c0);
  stroke(#b5b3c0);
  strokeWeight(2.404);
  noStroke();
  rect(179.12291, 261.9375, 63.764584, 31.220833);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(226.78934, 269.73083, 49.741664, 74.877082,3.5060563,4.1901576,PIE);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  rect(213.46817, 237.97679, 24.976337, 34.704948);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  rect(204.13742, 254.54054, 24.976337, 34.704948);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  rect(227.61919, 238.99628, 24.976337, 34.704948);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  rect(241.04678, 241.17909, 23.256559, 30.207033);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(166.59512, 296.90973, 147.598328, 108.885604,0.50546873,4.8134396,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(161.62927, 310.58722, 146.101624, 95.78939,5.165223,7.3560593,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(121.53204, 329.16882, 146.101624, 95.78939,5.165223,7.3560593,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(214.7756, 319.24939, 146.101624, 95.78939,1.7614349,2.2047208,PIE);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(163.77708, 290.90939, 189.706238, 125.412498,1.0913521,2.0396136,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(189.02467, 301.89426, 191.822906, 124.883332,2.1428263,4.3413582,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(188.78802, 299.51624, 191.822906, 124.883332,2.1428263,4.3413582,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(188.19756, 300.98871, 191.822906, 124.883332,2.1428263,4.3413582,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(168.30894, 264.91406, 82.882522, 44.846874,4.5573795,7.3560593,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(226.56438, 317.95721, 5.61266, 0.56126594,2.6953528,5.4353539,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(252.52293, 278.24371, 29.653554, 47.980458,2.1926386,5.8006087,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(231.42868, 296.9097, 24.882794, 38.353176,3.1264443,6.4068096500000005,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(233.25279, 283.29901, 0.093544334, 2.8998744,3.1264443,6.4068096500000005,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(276.25983, 253.15436, 30.63577, 18.381462,2.0354582,5.1035967,PIE);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(262.26443, 261.17578, 15.7412224, 9.728611,2.0354582,5.1035967,PIE);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(266.08685, 261.03546, 11.9736748, 11.9736748,1.627492,5.8731876,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(269.548, 245.97482, 26.75368, 7.4835468,1.627492,5.8731876,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(115.16682, 235.78192, 40.8321, 43.731976);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(133.05234, 238.02577, 23.481772, 23.481772);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(106.27467, 248.95122, 30.493228, 30.757812);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(113.5507, 254.11058, 30.493228, 30.757812);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(109.5375, 218.3474, 16.536459, 16.536459);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(104.96444, 211.70953, 10.649479, 23.944792);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(103.45473, 200.42439, 5.5165576, 5.5165576);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(102.3059, 219.21867, 10.649479, 23.944792);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(109.71424, 218.22647, 10.649479, 23.944792);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(109.37102, 205.97299, 4.5811142, 4.5811142);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(112.50868, 207.755, 4.5811142, 4.5811142);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(114.98072, 210.35545, 4.5811142, 4.5811142);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(117.16021, 212.92517, 4.5811142, 4.5811142);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(119.43736, 214.44984, 4.5811142, 4.5811142);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(132.4955, 227.02145, 4.5811142, 4.5811142);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(202.23309, 363.36157, 8.7931662, 8.7931662);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(198.81056, 360.73553, 8.7931662, 8.7931662);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(197.15692, 361.06628, 8.7931662, 8.7931662);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(204.3981, 352.70114, 9.541521, 9.541521);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(208.90817, 353.37067, 4.1175628, 4.1175628);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(150.01874, 352.65649, 28.971876, 9.8557292);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(139.0312, 356.67233, 11.7739582, 6.0854168);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(144.74522, 356.31964, 11.7739582, 6.0854168);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(179.13741, 350.74448, 23.386084, 11.6930418);
  fill(#b5b3c0);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(156.63333, 356.3276, 157.22864, 365.125);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(131.11958, 321.88605, 51.764408, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(134.08365, 328.51459, 51.764408, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(143.61919, 332.73737, 51.764408, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(157.59625, 333.77139, 51.764408, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(167.68109, 333.86719, 51.764408, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(169.79547, 322.08661, 51.764408, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(180.29353, 319.81216, 48.022636, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(181.97894, 328.44049, 48.022636, 39.849888);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(178.88239, 334.13889, 51.764408, 39.849888);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(166.51762, 360.47873, 21.866492, 14.7144708);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(156.37259, 368.92725, 2.9278846, 2.9278846);
  fill(#ffffff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(125.42093, 317.0166, 35.889408, 42.760304);
  fill(#b5b3c0);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(318.79907, 401.27087, 50.139762, 81.127838);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(115.22314, 347.0072, 52.652084, 26.326042,0.46300887,1.0166893,OPEN);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(95.097855, 350.09851, 138.712876, 26.326042,0.46300887,0.80766277,OPEN);
  fill(#ffcce3);
  stroke(#000000);
  strokeWeight(2.404);
  noStroke();
  rect(143.93332, 269.21356, 15.54428, 30.669378);
  fill(#ffcce3);
  stroke(#000000);
  strokeWeight(2.404);
  noStroke();
  arc(151.42918, 281.71509, 37.835414, 33.205208,5.8452058,11.998617,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  arc(144.85095, 286.64703, 62.83854, 62.83854,1.9878573,2.5236529,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  arc(142.97539, 290.92551, 62.83854, 62.83854,2.3932169,2.570609,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  line(122.94064, 308.76647, 119.4795, 312.62515);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  line(131.40641, 314.28556, 131.24269999999999, 318.47168);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  arc(122.47292, 318.28458, 17.3992462, 17.3992462,0.0,1.3007004,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  arc(148.24275, 328.66779, 65.184746, 65.184746,3.4485249,3.7197543,OPEN);
  fill(#000000);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  arc(183.11302, 344.71085, 30.588996, 42.843308,3.9354324,5.4191322,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  line(189.54421, 320.4361, 187.0419, 323.61663);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  line(194.40851, 320.83367, 190.15225, 325.62784);
  fill(#fdb5ff);
  stroke(#000000);
  strokeWeight(2.404);
  ellipse(147.63635, 330.32843, 7.9044962, 7.9044962);
  fill(#fda4ff);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  arc(151.76634, 256.83762, 88.370834, 167.745834,1.5460852,1.8520698,OPEN);
  fill(#fda4ff);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  arc(141.77205, 259.4028, 88.370834, 167.745834,1.1937933,1.3297442,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  ellipse(123.65519, 316.16461, 9.027028, 9.027028);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.89223);
  arc(164.10889, 300.84995, 142.073348, 117.003456,2.4247949,3.7328169,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.71033);
  arc(183.40704, 318.19226, 170.082168, 81.941612,2.1324884,2.6147842,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.27053);
  arc(161.45755, 304.58038, 194.331528, 98.91629,1.0829869,1.8175134,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.59956);
  arc(194.28058, 306.36707, 79.878388, 88.671554,6.1273946,7.5426774000000005,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(161.73816, 260.14679, 92.98307, 36.108112,4.3393497,5.9317906,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(176.81889, 337.21072, 198.26065, 198.26065,3.8991489,4.391964,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(101.66145, 196.0128, 143.5979, 232.98832);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  ellipse(100.11172, 189.67317, 13.9567708, 13.9567708);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(213.98267, 238.21064, 237.74293, 237.88324);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(278.80468, 243.35052, 237.39739000000003, 237.92656);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(279.86302, 248.11302, 242.29883, 299.84044);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.43009);
  ellipse(285.84924, 241.6638, 16.0473404, 16.0473404);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(227.14478, 270.40414, 49.741664, 74.877082,3.5060563,4.1911108,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(243.3322, 299.38863, 225.67571, 298.85076);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(138.15169, 321.42111, 64.545586, 59.253918,2.2821078,4.3318367,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(180.91474, 299.06124, 149.10967, 308.04149);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(184.54686, 339.06354, 46.302082, 79.110412,4.8221824,5.9781677,OPEN);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(206.60651, 326.36354, 205.71354, 336.81458);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(143.18899, 232.22695, 144.46249999999998, 243.2513);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(105.96562, 267.69218, 90.752083, 254.49609);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(91.082811, 255.5875, 101.46771, 196.71771);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(125.053, 293.90061, 150.0168, 308.02979);
  fill(#ffffff);
  stroke(#000000);
  strokeWeight(2.404);
  line(144.0115, 294.15015, 143.87119, 299.99667);
  fill(#fe9f00);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(187.25885, 299.73984, 180.41276, 299.07838000000004);
  fill(#b5b3c0);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(168.56689, 319.73456, 80.822304, 80.822304,0.40241348,0.89459661,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  ellipse(125.5387, 318.84991, 9.027028, 9.027028);
  fill(#ffffff);
  stroke(#000000);
  strokeWeight(2.404);
  line(159.35277, 296.06782, 159.58662999999999, 299.85636);
  fill(#ffffff);
  stroke(#000000);
  strokeWeight(2.404);
  line(149.68802, 292.23229, 149.75412, 299.57448);
  fill(#ffffff);
  stroke(#000000);
  strokeWeight(2.404);
  line(153.78906, 293.6875, 153.9875, 299.64062);
  fill(#ffcce3);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  arc(145.65312, 280.78906, 26.326042, 30.030208,2.0935921,4.672631,OPEN);
  fill(#ffcce3);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  line(138.31094, 293.5552, 143.86719, 295.67187);
  fill(#ffcce3);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  line(144.72708, 265.90625, 156.43489, 265.77395);
  fill(#ffcce3);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  arc(151.93697, 282.50885, 36.909378, 34.66042,4.9276377,6.42995604,OPEN);
  fill(#ffcce3);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  line(159.08073, 295.67187, 163.71094, 294.87812);
  fill(#ffcce3);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  arc(157.75781, 284.03021, 24.473958, 24.473958,6.25781,7.456657300000001,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  noStroke();
  arc(141.65131, 284.32785, 6.9453124, 9.9880208,5.8452058,11.998617,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  noStroke();
  arc(160.87766, 285.38724, 6.9453124, 9.9880208,5.8452058,11.998617,OPEN);
  fill(#000000);
  noFill();
  stroke(#000000);
  strokeWeight(2.404);
  line(144.33021, 299.50833, 159.54375, 299.70677);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(205.21827, 348.52253, 210.94247, 351.39929);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(157.26172, 364.33125, 156.96406, 364.72812);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(156.59322, 370.57589, 161.08334, 369.96785);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(159.89066, 332.80731, 55.518566, 73.104896,0.8236973,1.3520768,OPEN);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(270.62994, 344.2525, 200.51228, 73.104896,2.5226322,2.7427714,OPEN);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(199.76041, 366.7125, 187.6888, 364.69505);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(205.48203, 366.44791, 199.03281, 366.5802);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(198.8013, 353.68177, 206.97030999999998, 363.20676999999995);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(212.69192, 354.50859, 209.08698, 356.39375);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(168.72304, 372.0887, 157.12345, 370.89075);
  fill(#000000);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(201.05026, 356.16224, 209.74843, 356.22834);
  fill(#fdb5ff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  ellipse(125.16232, 358.08771, 8.7931662, 8.7931662);
  fill(#fdb5ff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  ellipse(155.79207, 369.92996, 8.7931662, 8.7931662);
  fill(#fdb5ff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  ellipse(208.20328, 366.22568, 8.7931662, 8.7931662);
  fill(#fdb5ff);
  stroke(#5c5b59);
  strokeWeight(2.404);
  ellipse(215.08244, 353.85638, 8.7931662, 8.7931662);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(176.08022, 378.42032, 20.637498, 20.505208,3.7549059,8.7723552,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(190.39394, 378.03479, 20.637498, 18.6531238,4.0098296,8.6320657,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(167.54739, 360.56094, 49.873958, 49.873958,1.8781533,3.2314402,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(168.80554, 385.13812, 159.72751, 384.28488);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(199.24943, 366.03897, 199.53006, 366.45992);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(189.14664, 364.54228, 188.95954999999998, 368.65821);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(160.00676, 385.16718, 37.173958, 89.561462,2.9834885,3.5790101,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(153.59062, 390.3927, 23.547916, 33.337502,1.8997729,2.9737461,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(178.4695, 397.93332, 34.67649, 28.045834,6.1905297,7.860825200000001,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(197.04844, 384.95132, 197.30163, 392.9443);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(195.69881, 397.12685, 197.31302, 392.50937);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(178.85833, 417.71093, 179.48671, 410.89791);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(160.00676, 406.46613, 19.7114582, 36.64479,1.9429437,3.2201708,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(150.95421, 405.32761, 55.69971, 34.424316,2.083655,2.932328,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(132.81219, 395.72562, 19.083044, 19.083044,4.8130791,6.0346431,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(125.55988, 391.03873, 8.0915852, 8.0915852,3.2172198,4.8194935,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(134.18132, 386.26629, 125.58327, 386.94614);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(121.56086, 390.45405, 120.39156, 402.6499);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(123.78987, 409.26448, 120.29802, 402.03017);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(136.66073, 420.26093, 141.95118, 419.41405999999995);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(150.51283, 414.9159, 141.46242, 419.56974);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(152.94499, 419.92052, 146.93477, 425.57995);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(162.22928, 428.19916, 41.627228, 35.640388,5.5508546,6.44372343,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(217.7626, 433.30161, 147.145248, 44.807732,2.7758741,3.06145,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(178.24873, 436.33755, 169.45556, 441.06152000000003);
  fill(#b5b3c0);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(179.16019, 332.40979, 41.017994, 25.350514,3.9354324,5.4191322,OPEN);
  fill(#b5b3c0);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(156.6664, 354.93853, 157.06161, 365.1571);
  fill(#ffffff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(156.43619, 359.47147, 165.09999, 165.09999,1.4055726,1.6507154,OPEN);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  ellipse(122.23906, 320.17886, 10.430193, 10.430193);
  fill(#000000);
  stroke(#000000);
  strokeWeight(2.404);
  ellipse(123.38837, 320.29648, 12.1139908, 13.2365226);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(130.5645, 358.55543, 143.42684, 359.53764);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(160.73255, 370.08477, 166.13474, 368.44773);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(190.97075, 403.78412, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(194.88153, 404.47592, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(200.14012, 404.40982, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(205.06799, 403.81448, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(209.36746, 401.9624, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(213.56773, 398.91971, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(217.70184, 394.98404, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(218.46252, 393.4296, 7.4835462, 7.1093692);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(221.30679, 388.66711, 10.548953, 10.548953);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(215.10043, 387.44339, 3.802078, 3.802078);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  arc(219.02539, 391.08725, 0.23151042, 2.38125,0.0,5.8500625,OPEN);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(215.70155, 388.50754, 2.778125, 2.778125);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(224.87413, 393.2814, 2.778125, 2.778125);
  fill(#b5b3c0);
  stroke(#5c5b59);
  strokeWeight(2.404);
  noStroke();
  ellipse(224.18774, 383.99744, 5.918744, 5.918744);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(225.893, 380.42876, 226.4596, 396.28604);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(211.05724, 388.42036, 226.54947, 379.37943);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(217.54201, 391.62276, 212.32812, 388.44140000000004);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(190.35117, 403.40689, 7.1768226, 7.1768226,1.8391626,4.8397447,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(196.52301, 384.61911, 42.868286, 34.798492,0.36814525,1.3574122,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(170.42276, 380.02832, 111.43943, 74.461288,0.36814525,0.64666428,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  arc(200.32521, 385.4494, 44.994824, 44.994824,0.80716543,1.757692,OPEN);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(190.40078, 399.75233, 196.35390999999998, 401.00910999999996);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(201.54635, 401.67057, 195.72552, 400.90989);
  fill(#fdb5ff);
  noFill();
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(188.74713, 406.66458, 196.3539, 407.72291);
  fill(#000000);
  stroke(#5c5b59);
  strokeWeight(2.404);
  line(220.99849, 393.389, 227.0321, 397.16585000000003);
}
